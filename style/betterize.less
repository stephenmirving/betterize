////////////////////////////////////////////////////////////////////////////////
// -------------------------------------------------------------------------- //
// betterize.less - Opinionated normalization for better cross-browser design //
// @author Stephen M Irving -- <@metric_dev> -------------------------------- //
// @version 0.9.9 01/16/2024 ------------------------------------------------ //
// -------------------------------------------------------------------------- //
////////////////////////////////////////////////////////////////////////////////

html {
  overflow: hidden scroll;
  box-sizing: border-box;
  color: #333;
  font-family:
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    sans-serif,
    'Apple Color Emoji',
    'Segoe UI Emoji',
    'Segoe UI Symbol';
  font-size: 1em;
  line-height: 1.4;
  overflow-wrap: break-word;
  -moz-tab-size: 4;
       tab-size: 4;
  cursor: default;
  color-scheme: light dark;
  scrollbar-gutter: stable;
  hanging-punctuation: first last;
  -webkit-tap-highlight-color: transparent;
  -webkit-text-size-adjust: 100%;
     -moz-text-size-adjust: 100%;
          text-size-adjust: 100%;
}

@media (prefers-reduced-motion: no-preference) {
  html {
    scroll-behavior: smooth;
  }

  :has(:target) {
    scroll-behavior: smooth;
    scroll-padding-top: 3rem;
  }
}

*,
::before,
::after {
  box-sizing: inherit;
  background-repeat: no-repeat;
}

::before,
::after {
  vertical-align: inherit;
  text-decoration: inherit;
}


// TODO: Customize the selection background and color to match your design.

::-moz-selection {
  background: rgb(52 81 113);
  color: #fff;
  text-shadow: none;
}

::selection {
  background: rgb(52 81 113);
  color: #fff;
  text-shadow: none;
}

// Get rid of the default focus that can activate with the mouse and makes the
// default keyboard focus styling look the same on all elements
// and across all modern browsers with :-moz-focusring and :focus-visible

:focus {
  outline: 0;
}

:focus-visible {
  outline: 2px solid #000;
  outline-offset: 3px;
}

:-moz-focusring {
  outline: 2px solid #000;
  outline-offset: 4px;
}

body {
  overflow-x: clip;
  min-height: 100vh;
  min-height: 100lvh;
  margin: 0;
  background: rgb(242 242 242);
  text-rendering: optimizeSpeed;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;

  @media screen and (min-width: 80em) {
    text-rendering: optimizeLegibility;
  }
}

// https://developer.chrome.com/docs/css-ui/css-text-wrap-balance

h1,
h2,
h3,
h4,
h5,
h6,
blockquote {
  white-space: unset;
  text-wrap: balance;
}

p {
  max-width: 98ch;
  text-wrap: pretty;
}

table {
  vertical-align: middle;
  border-spacing: 0;
  border-collapse: collapse;
  border-color: currentcolor;
  text-indent: 0;
  font-variant-numeric: tabular-nums;
}

dialog:not([open]),
template {
  display: none;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted;
}

b,
strong {
  font-weight: bolder;
  line-height: inherit;
}

small {
  font-size: 80%;
  line-height: inherit;
}

// Prevent `sub` and `sup` elements from affecting the line height in
// all browsers.

sub,
sup {
  position: relative;
  vertical-align: baseline;
  font-size: 75%;
  line-height: 0;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

textarea {
  resize: vertical;
}

select:not([multiple]):not([size]) {
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='4'%3E%3Cpath d='M4 0h6L7 4'/%3E%3C/svg%3E");
}

button,
input,
optgroup,
select,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
}

a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex='0'] {
  touch-action: manipulation;
}

a {
  cursor: pointer;
}

// Remove the inheritance of text transform in Edge, Firefox, and IE.

button,
select {
  text-transform: none;
}

// Correct the inability to style clickable types in iOS and Safari.

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
}

legend {
  padding: 0;
}

// Add the correct vertical alignment in Chrome, Firefox, and Opera.

progress {
  display: inline-block;
  vertical-align: baseline;
}

// A better looking horizontal rule that looks the same in all browsers
// and inherits the color of the parent element's text so that it looks good
// by default on all background colors.

hr {
  display: block;
  overflow: hidden;
  box-sizing: content-box;
  height: 0;
  padding: 0;
  border: 0;
  border-top: 2px solid currentcolor;
  margin: 1em 0;
  color: inherit;
}

canvas,
details,
img,
svg,
video {
  display: block;
}

:where(details > summary:first-of-type) {
  display: list-item;
}

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

audio,
canvas,
embed,
iframe,
img,
input,
object,
select,
textarea,
video {
  max-width: 100%;
  height: auto;
}

img {
  border-style: none;
  background-size: cover;
  background-repeat: no-repeat;
  image-rendering: smooth;
  font-style: italic;
  shape-margin: 1rem;
}

iframe {
  border: 0;
}

fieldset {
  padding: 0;
  border: 0;
  margin: 0;
}

input:disabled,
select:disabled,
textarea:disabled {
  background-color: #e6e6e6;
  cursor: not-allowed;
}

dl,
ol,
ul {
  margin-top: 0;
  margin-bottom: 1rem;
}

menu,
nav ol,
nav ul,
footer ol,
footer ul {
  padding: 0;
  margin: 0;
  list-style: none;
}

dl dl,
dl ol,
dl ul,
ol dl,
ol ol,
ol ul,
ul dl,
ul ol,
ul ul {
  margin: 0;
}

// Prevent VoiceOver from ignoring list semantics in Safari

nav li::before {
  content: '\200B';
  float: left;
}

pre {
  overflow: auto;
}

pre,
code,
kbd,
samp {
  font-family: ui-monospace, Consolas, 'Liberation Mono', Menlo, monospace;
  font-size: 1em;
}

address {
  font-style: normal;
}

[type='checkbox'],
[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

::placeholder {
  color: inherit;
  opacity: 0.54;
}

// Correct the cursor style of increment and decrement buttons in Chrome.

[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto;
}

[type='search'] {
  outline-offset: -2px;
  -webkit-appearance: textfield;
}

::-webkit-search-decoration {
  -webkit-appearance: none;
}

///
// 1. Correct the inability to style clickable types in iOS and Safari.
// 2. Change font properties to `inherit` in Safari.
///

::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}

:-moz-ui-invalid {
  box-shadow: none;
}

:-moz-submit-invalid {
  box-shadow: none;
}

:invalid {
  box-shadow: none;
}

svg:not(:root) {
  overflow: hidden;
}

svg:not([fill]) {
  fill: currentcolor;
}

[aria-busy='true'] {
  cursor: progress;
}

[aria-controls] {
  cursor: pointer;
}

[aria-disabled='true'],
[disabled] {
  cursor: not-allowed;
}

[aria-hidden='false'][hidden] {
  display: initial;

  &:not(:focus) {
    position: absolute;
    clip: rect(0, 0, 0, 0);
  }
}

///
// This next rule is only needed if using a JS framework like React. You want
// to select the top level element that your application is rendered within.
// It ensures that high-priority elements will show up above the others
// and prevents stacking context bugs and z-index issues.
///

#root,
#__next {
  isolation: isolate;
}


///
/// #UTILITIES
///

// Hide visually and from screen readers. It is recommended that you use the
// HTML attribute [hidden] rather than a .hidden class for accessibility.

[hidden] {
  display: none !important;
}

// Hide visually. Make it available for screen readers only:
// https://snook.ca/archives/html_and_css/hiding-content-for-accessibility

.sr-only,
.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  clip-path: inset(100%);
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  margin: -1px;
  white-space: nowrap;
}


// Extends the .visually-hidden class to allow the element
// to be focusable when navigated to via the keyboard:
// https://www.drupal.org/node/897638

.sr-only.focusable:active,
.sr-only.focusable:focus,
.sr-only--focusable:active,
.sr-only--focusable:focus,
.visually-hidden.focusable:active,
.visually-hidden.focusable:focus,
.visually-hidden--focusable:active,
.visually-hidden--focusable:focus {
  position: static;
  overflow: visible;
  clip: auto;
  clip-path: none;
  width: auto;
  height: auto;
  margin: 0;
  white-space: inherit;
}

// Hide visually and from screen readers, but maintain layout

.invisible {
  visibility: hidden;
}

.clearfix::before,
.clearfix::after {
  content: ' ';
  display: table;
}

.clearfix::after {
  clear: both;
}

// Modern way to clear floats

.group {
  display: flow-root;
  overflow: clip;
}

.anim-off {
  animation: none !important;
}
